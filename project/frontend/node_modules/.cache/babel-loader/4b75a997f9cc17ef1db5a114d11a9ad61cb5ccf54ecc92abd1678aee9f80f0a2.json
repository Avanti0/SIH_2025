{"ast":null,"code":"import _objectSpread from\"/home/admin-cse/Desktop/SIH_avanti/SIH_2025/project/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Mock API for demo without backend\nconst mockApi={async register(userData){// Simulate API delay\nawait new Promise(resolve=>setTimeout(resolve,1000));// Store user data in localStorage\nconst users=JSON.parse(localStorage.getItem('demoUsers')||'[]');if(users.find(u=>u.mobile===userData.mobile)){throw new Error('User already exists with this mobile number');}const user=_objectSpread(_objectSpread({id:Date.now()},userData),{},{createdAt:new Date().toISOString()});users.push(user);localStorage.setItem('demoUsers',JSON.stringify(users));localStorage.setItem('currentUser',JSON.stringify(user));return{message:'Registration successful',token:'demo_token_'+user.id,user:{id:user.id,name:user.name,mobile:user.mobile,farmType:user.farmType}};},async login(credentials){await new Promise(resolve=>setTimeout(resolve,800));const users=JSON.parse(localStorage.getItem('demoUsers')||'[]');const user=users.find(u=>u.mobile===credentials.mobile&&u.password===credentials.password);if(!user){throw new Error('Invalid credentials');}localStorage.setItem('currentUser',JSON.stringify(user));return{message:'Login successful',token:'demo_token_'+user.id,user:{id:user.id,name:user.name,mobile:user.mobile,farmType:user.farmType}};},async getDashboard(){await new Promise(resolve=>setTimeout(resolve,500));return{totalAnimals:250,healthyAnimals:245,complianceScore:85,lastInspection:'2025-09-15'};},async getAlerts(){await new Promise(resolve=>setTimeout(resolve,300));return{alerts:[{id:1,type:'warning',message:'Avian Flu reported 15km away',time:'2 hours ago'},{id:2,type:'info',message:'Vaccination reminder due tomorrow',time:'1 day ago'}]};},async getBiosecurityChecklist(){await new Promise(resolve=>setTimeout(resolve,400));const saved=localStorage.getItem('biosecurityData');if(saved){return JSON.parse(saved);}return{checklist:[{id:1,item:'Footbath at farm entrance',checked:false,critical:true},{id:2,item:'Visitor log maintained',checked:false,critical:true},{id:3,item:'Animals isolated when sick',checked:false,critical:true},{id:4,item:'Feed storage properly secured',checked:false,critical:false},{id:5,item:'Water sources protected',checked:false,critical:true},{id:6,item:'Waste disposal system in place',checked:false,critical:true},{id:7,item:'Regular cleaning schedule followed',checked:false,critical:false},{id:8,item:'Vaccination records updated',checked:false,critical:true},{id:9,item:'Equipment disinfected regularly',checked:false,critical:false},{id:10,item:'Dead animal disposal protocol',checked:false,critical:true}],complianceScore:0};},async updateBiosecurityChecklist(checklist){await new Promise(resolve=>setTimeout(resolve,600));const totalItems=checklist.length;const checkedItems=checklist.filter(item=>item.checked).length;const complianceScore=Math.round(checkedItems/totalItems*100);const data={checklist,complianceScore};localStorage.setItem('biosecurityData',JSON.stringify(data));return{message:'Checklist updated successfully',complianceScore};}};export default mockApi;","map":{"version":3,"names":["mockApi","register","userData","Promise","resolve","setTimeout","users","JSON","parse","localStorage","getItem","find","u","mobile","Error","user","_objectSpread","id","Date","now","createdAt","toISOString","push","setItem","stringify","message","token","name","farmType","login","credentials","password","getDashboard","totalAnimals","healthyAnimals","complianceScore","lastInspection","getAlerts","alerts","type","time","getBiosecurityChecklist","saved","checklist","item","checked","critical","updateBiosecurityChecklist","totalItems","length","checkedItems","filter","Math","round","data"],"sources":["/home/admin-cse/Desktop/SIH_avanti/SIH_2025/project/frontend/src/services/mockApi.js"],"sourcesContent":["// Mock API for demo without backend\nconst mockApi = {\n  async register(userData) {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Store user data in localStorage\n    const users = JSON.parse(localStorage.getItem('demoUsers') || '[]');\n    \n    if (users.find(u => u.mobile === userData.mobile)) {\n      throw new Error('User already exists with this mobile number');\n    }\n\n    const user = {\n      id: Date.now(),\n      ...userData,\n      createdAt: new Date().toISOString()\n    };\n\n    users.push(user);\n    localStorage.setItem('demoUsers', JSON.stringify(users));\n    localStorage.setItem('currentUser', JSON.stringify(user));\n\n    return {\n      message: 'Registration successful',\n      token: 'demo_token_' + user.id,\n      user: {\n        id: user.id,\n        name: user.name,\n        mobile: user.mobile,\n        farmType: user.farmType\n      }\n    };\n  },\n\n  async login(credentials) {\n    await new Promise(resolve => setTimeout(resolve, 800));\n    \n    const users = JSON.parse(localStorage.getItem('demoUsers') || '[]');\n    const user = users.find(u => \n      u.mobile === credentials.mobile && u.password === credentials.password\n    );\n\n    if (!user) {\n      throw new Error('Invalid credentials');\n    }\n\n    localStorage.setItem('currentUser', JSON.stringify(user));\n\n    return {\n      message: 'Login successful',\n      token: 'demo_token_' + user.id,\n      user: {\n        id: user.id,\n        name: user.name,\n        mobile: user.mobile,\n        farmType: user.farmType\n      }\n    };\n  },\n\n  async getDashboard() {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    return {\n      totalAnimals: 250,\n      healthyAnimals: 245,\n      complianceScore: 85,\n      lastInspection: '2025-09-15'\n    };\n  },\n\n  async getAlerts() {\n    await new Promise(resolve => setTimeout(resolve, 300));\n    \n    return {\n      alerts: [\n        { id: 1, type: 'warning', message: 'Avian Flu reported 15km away', time: '2 hours ago' },\n        { id: 2, type: 'info', message: 'Vaccination reminder due tomorrow', time: '1 day ago' }\n      ]\n    };\n  },\n\n  async getBiosecurityChecklist() {\n    await new Promise(resolve => setTimeout(resolve, 400));\n    \n    const saved = localStorage.getItem('biosecurityData');\n    if (saved) {\n      return JSON.parse(saved);\n    }\n\n    return {\n      checklist: [\n        { id: 1, item: 'Footbath at farm entrance', checked: false, critical: true },\n        { id: 2, item: 'Visitor log maintained', checked: false, critical: true },\n        { id: 3, item: 'Animals isolated when sick', checked: false, critical: true },\n        { id: 4, item: 'Feed storage properly secured', checked: false, critical: false },\n        { id: 5, item: 'Water sources protected', checked: false, critical: true },\n        { id: 6, item: 'Waste disposal system in place', checked: false, critical: true },\n        { id: 7, item: 'Regular cleaning schedule followed', checked: false, critical: false },\n        { id: 8, item: 'Vaccination records updated', checked: false, critical: true },\n        { id: 9, item: 'Equipment disinfected regularly', checked: false, critical: false },\n        { id: 10, item: 'Dead animal disposal protocol', checked: false, critical: true }\n      ],\n      complianceScore: 0\n    };\n  },\n\n  async updateBiosecurityChecklist(checklist) {\n    await new Promise(resolve => setTimeout(resolve, 600));\n    \n    const totalItems = checklist.length;\n    const checkedItems = checklist.filter(item => item.checked).length;\n    const complianceScore = Math.round((checkedItems / totalItems) * 100);\n\n    const data = {\n      checklist,\n      complianceScore\n    };\n\n    localStorage.setItem('biosecurityData', JSON.stringify(data));\n\n    return {\n      message: 'Checklist updated successfully',\n      complianceScore\n    };\n  }\n};\n\nexport default mockApi;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}