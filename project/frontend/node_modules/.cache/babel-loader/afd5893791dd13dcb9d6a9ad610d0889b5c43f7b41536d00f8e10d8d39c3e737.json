{"ast":null,"code":"import _objectSpread from\"/home/admin-cse/Desktop/SIH_avanti/SIH_2025/project/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import mockApi from'../services/mockApi';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BiosecurityChecklist=()=>{const[checklist,setChecklist]=useState([]);const[complianceScore,setComplianceScore]=useState(0);const[loading,setLoading]=useState(true);useEffect(()=>{fetchChecklist();},[]);const fetchChecklist=async()=>{try{const data=await mockApi.getBiosecurityChecklist();setChecklist(data.checklist||[]);setComplianceScore(data.complianceScore||0);}catch(error){console.error('Error fetching checklist:',error);}finally{setLoading(false);}};const handleCheckChange=async id=>{const updatedChecklist=checklist.map(item=>item.id===id?_objectSpread(_objectSpread({},item),{},{checked:!item.checked}):item);setChecklist(updatedChecklist);// Calculate new score\nconst totalItems=updatedChecklist.length;const checkedItems=updatedChecklist.filter(item=>item.checked).length;const newScore=Math.round(checkedItems/totalItems*100);setComplianceScore(newScore);// Update mock API\ntry{await mockApi.updateBiosecurityChecklist(updatedChecklist);}catch(error){console.error('Error updating checklist:',error);}};const criticalIssues=checklist.filter(item=>item.critical&&!item.checked);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading checklist...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"checklist-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"checklist-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/dashboard\",className:\"back-btn\",children:\"\\u2190 Back to Dashboard\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Biosecurity Checklist\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"score-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"current-score\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Current Score: \",complianceScore,\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"score-indicator\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"score-circle \".concat(complianceScore>=80?'good':complianceScore>=60?'warning':'danger'),children:[complianceScore,\"%\"]})})]})}),criticalIssues.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"critical-alerts\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\u26A0\\uFE0F Critical Issues (\",criticalIssues.length,\")\"]}),/*#__PURE__*/_jsx(\"ul\",{children:criticalIssues.map(issue=>/*#__PURE__*/_jsx(\"li\",{children:issue.item},issue.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"checklist-items\",children:checklist.map(item=>/*#__PURE__*/_jsx(\"div\",{className:\"checklist-item \".concat(item.critical?'critical':''),children:/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:item.checked,onChange:()=>handleCheckChange(item.id)}),/*#__PURE__*/_jsx(\"span\",{className:\"checkmark\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"item-text\",children:[item.item,item.critical&&/*#__PURE__*/_jsx(\"span\",{className:\"critical-badge\",children:\"Critical\"})]})]})},item.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn-primary\",children:\"Save Progress\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",children:\"Generate Report\"})]})]});};export default BiosecurityChecklist;","map":{"version":3,"names":["React","useState","useEffect","Link","mockApi","jsx","_jsx","jsxs","_jsxs","BiosecurityChecklist","checklist","setChecklist","complianceScore","setComplianceScore","loading","setLoading","fetchChecklist","data","getBiosecurityChecklist","error","console","handleCheckChange","id","updatedChecklist","map","item","_objectSpread","checked","totalItems","length","checkedItems","filter","newScore","Math","round","updateBiosecurityChecklist","criticalIssues","critical","className","children","to","concat","issue","type","onChange"],"sources":["/home/admin-cse/Desktop/SIH_avanti/SIH_2025/project/frontend/src/pages/BiosecurityChecklist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport mockApi from '../services/mockApi';\n\nconst BiosecurityChecklist = () => {\n  const [checklist, setChecklist] = useState([]);\n  const [complianceScore, setComplianceScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchChecklist();\n  }, []);\n\n  const fetchChecklist = async () => {\n    try {\n      const data = await mockApi.getBiosecurityChecklist();\n      setChecklist(data.checklist || []);\n      setComplianceScore(data.complianceScore || 0);\n    } catch (error) {\n      console.error('Error fetching checklist:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCheckChange = async (id) => {\n    const updatedChecklist = checklist.map(item => \n      item.id === id ? { ...item, checked: !item.checked } : item\n    );\n    setChecklist(updatedChecklist);\n\n    // Calculate new score\n    const totalItems = updatedChecklist.length;\n    const checkedItems = updatedChecklist.filter(item => item.checked).length;\n    const newScore = Math.round((checkedItems / totalItems) * 100);\n    setComplianceScore(newScore);\n\n    // Update mock API\n    try {\n      await mockApi.updateBiosecurityChecklist(updatedChecklist);\n    } catch (error) {\n      console.error('Error updating checklist:', error);\n    }\n  };\n\n  const criticalIssues = checklist.filter(item => item.critical && !item.checked);\n\n  if (loading) {\n    return <div className=\"loading\">Loading checklist...</div>;\n  }\n\n  return (\n    <div className=\"checklist-container\">\n      <header className=\"checklist-header\">\n        <Link to=\"/dashboard\" className=\"back-btn\">← Back to Dashboard</Link>\n        <h2>Biosecurity Checklist</h2>\n      </header>\n\n      <div className=\"score-section\">\n        <div className=\"current-score\">\n          <h3>Current Score: {complianceScore}%</h3>\n          <div className=\"score-indicator\">\n            <div \n              className={`score-circle ${complianceScore >= 80 ? 'good' : complianceScore >= 60 ? 'warning' : 'danger'}`}\n            >\n              {complianceScore}%\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {criticalIssues.length > 0 && (\n        <div className=\"critical-alerts\">\n          <h4>⚠️ Critical Issues ({criticalIssues.length})</h4>\n          <ul>\n            {criticalIssues.map(issue => (\n              <li key={issue.id}>{issue.item}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <div className=\"checklist-items\">\n        {checklist.map(item => (\n          <div key={item.id} className={`checklist-item ${item.critical ? 'critical' : ''}`}>\n            <label className=\"checkbox-container\">\n              <input\n                type=\"checkbox\"\n                checked={item.checked}\n                onChange={() => handleCheckChange(item.id)}\n              />\n              <span className=\"checkmark\"></span>\n              <span className=\"item-text\">\n                {item.item}\n                {item.critical && <span className=\"critical-badge\">Critical</span>}\n              </span>\n            </label>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"action-buttons\">\n        <button className=\"btn-primary\">Save Progress</button>\n        <button className=\"btn-secondary\">Generate Report</button>\n      </div>\n    </div>\n  );\n};\n\nexport default BiosecurityChecklist;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}