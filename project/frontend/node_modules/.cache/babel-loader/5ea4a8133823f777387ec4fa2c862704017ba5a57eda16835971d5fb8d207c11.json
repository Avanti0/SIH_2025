{"ast":null,"code":"import _objectSpread from\"/home/admin-cse/Desktop/SIH_avanti/SIH_2025/project/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Mock API for demo without backend\nconst mockApi={async register(userData){// Simulate API delay\nawait new Promise(resolve=>setTimeout(resolve,1000));// Store user data in localStorage\nconst users=JSON.parse(localStorage.getItem('demoUsers')||'[]');if(users.find(u=>u.mobile===userData.mobile)){throw new Error('User already exists with this mobile number');}const user=_objectSpread(_objectSpread({id:Date.now()},userData),{},{createdAt:new Date().toISOString()});users.push(user);localStorage.setItem('demoUsers',JSON.stringify(users));localStorage.setItem('currentUser',JSON.stringify(user));return{message:'Registration successful',token:'demo_token_'+user.id,user:{id:user.id,name:user.name,mobile:user.mobile,farmType:user.farmType}};},async login(credentials){await new Promise(resolve=>setTimeout(resolve,800));const users=JSON.parse(localStorage.getItem('demoUsers')||'[]');const user=users.find(u=>u.mobile===credentials.mobile&&u.password===credentials.password);if(!user){throw new Error('Invalid credentials');}localStorage.setItem('currentUser',JSON.stringify(user));return{message:'Login successful',token:'demo_token_'+user.id,user:{id:user.id,name:user.name,mobile:user.mobile,farmType:user.farmType}};},async getDashboard(){await new Promise(resolve=>setTimeout(resolve,500));// Get compliance score from biosecurity data\nconst biosecurityData=JSON.parse(localStorage.getItem('biosecurityData')||'{}');const complianceScore=biosecurityData.complianceScore||0;return{totalAnimals:250,healthyAnimals:245,complianceScore:complianceScore,lastInspection:'2025-09-15'};},async getAlerts(){await new Promise(resolve=>setTimeout(resolve,300));// Generate dynamic alerts based on compliance and other factors\nconst alerts=[];const biosecurityData=JSON.parse(localStorage.getItem('biosecurityData')||'{}');const complianceScore=biosecurityData.complianceScore||0;// Low compliance alert\nif(complianceScore<70){alerts.push({id:1,type:'warning',message:\"Biosecurity compliance is low (\".concat(complianceScore,\"%). Please complete checklist items.\"),time:'1 hour ago',priority:'high'});}// Disease outbreak alert (simulated)\nalerts.push({id:2,type:'danger',message:'Avian Flu outbreak reported 15km from your location. Increase biosecurity measures.',time:'2 hours ago',priority:'critical'});// Vaccination reminder\nalerts.push({id:3,type:'info',message:'Vaccination schedule reminder: Next vaccination due in 3 days.',time:'1 day ago',priority:'medium'});// Feed stock alert\nalerts.push({id:4,type:'warning',message:'Feed stock running low. Current stock: 500kg remaining.',time:'6 hours ago',priority:'medium'});return{alerts};},async getBiosecurityChecklist(){await new Promise(resolve=>setTimeout(resolve,400));const saved=localStorage.getItem('biosecurityData');if(saved){return JSON.parse(saved);}return{checklist:[{id:1,item:'Footbath at farm entrance',checked:false,critical:true},{id:2,item:'Visitor log maintained',checked:false,critical:true},{id:3,item:'Animals isolated when sick',checked:false,critical:true},{id:4,item:'Feed storage properly secured',checked:false,critical:false},{id:5,item:'Water sources protected',checked:false,critical:true},{id:6,item:'Waste disposal system in place',checked:false,critical:true},{id:7,item:'Regular cleaning schedule followed',checked:false,critical:false},{id:8,item:'Vaccination records updated',checked:false,critical:true},{id:9,item:'Equipment disinfected regularly',checked:false,critical:false},{id:10,item:'Dead animal disposal protocol',checked:false,critical:true}],complianceScore:0};},async updateBiosecurityChecklist(checklist){await new Promise(resolve=>setTimeout(resolve,600));const totalItems=checklist.length;const checkedItems=checklist.filter(item=>item.checked).length;const criticalItems=checklist.filter(item=>item.critical).length;const checkedCriticalItems=checklist.filter(item=>item.critical&&item.checked).length;// Weight critical items more heavily in scoring\nconst criticalScore=checkedCriticalItems/criticalItems*70;const regularScore=(checkedItems-checkedCriticalItems)/(totalItems-criticalItems)*30;const complianceScore=Math.round(criticalScore+regularScore);const data={checklist,complianceScore:Math.max(0,complianceScore)};localStorage.setItem('biosecurityData',JSON.stringify(data));return{message:'Checklist updated successfully',complianceScore:data.complianceScore};},async dismissAlert(alertId){await new Promise(resolve=>setTimeout(resolve,200));const dismissedAlerts=JSON.parse(localStorage.getItem('dismissedAlerts')||'[]');if(!dismissedAlerts.includes(alertId)){dismissedAlerts.push(alertId);localStorage.setItem('dismissedAlerts',JSON.stringify(dismissedAlerts));}return{message:'Alert dismissed'};}};export default mockApi;","map":{"version":3,"names":["mockApi","register","userData","Promise","resolve","setTimeout","users","JSON","parse","localStorage","getItem","find","u","mobile","Error","user","_objectSpread","id","Date","now","createdAt","toISOString","push","setItem","stringify","message","token","name","farmType","login","credentials","password","getDashboard","biosecurityData","complianceScore","totalAnimals","healthyAnimals","lastInspection","getAlerts","alerts","type","concat","time","priority","getBiosecurityChecklist","saved","checklist","item","checked","critical","updateBiosecurityChecklist","totalItems","length","checkedItems","filter","criticalItems","checkedCriticalItems","criticalScore","regularScore","Math","round","data","max","dismissAlert","alertId","dismissedAlerts","includes"],"sources":["/home/admin-cse/Desktop/SIH_avanti/SIH_2025/project/frontend/src/services/mockApi.js"],"sourcesContent":["// Mock API for demo without backend\nconst mockApi = {\n  async register(userData) {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    // Store user data in localStorage\n    const users = JSON.parse(localStorage.getItem('demoUsers') || '[]');\n    \n    if (users.find(u => u.mobile === userData.mobile)) {\n      throw new Error('User already exists with this mobile number');\n    }\n\n    const user = {\n      id: Date.now(),\n      ...userData,\n      createdAt: new Date().toISOString()\n    };\n\n    users.push(user);\n    localStorage.setItem('demoUsers', JSON.stringify(users));\n    localStorage.setItem('currentUser', JSON.stringify(user));\n\n    return {\n      message: 'Registration successful',\n      token: 'demo_token_' + user.id,\n      user: {\n        id: user.id,\n        name: user.name,\n        mobile: user.mobile,\n        farmType: user.farmType\n      }\n    };\n  },\n\n  async login(credentials) {\n    await new Promise(resolve => setTimeout(resolve, 800));\n    \n    const users = JSON.parse(localStorage.getItem('demoUsers') || '[]');\n    const user = users.find(u => \n      u.mobile === credentials.mobile && u.password === credentials.password\n    );\n\n    if (!user) {\n      throw new Error('Invalid credentials');\n    }\n\n    localStorage.setItem('currentUser', JSON.stringify(user));\n\n    return {\n      message: 'Login successful',\n      token: 'demo_token_' + user.id,\n      user: {\n        id: user.id,\n        name: user.name,\n        mobile: user.mobile,\n        farmType: user.farmType\n      }\n    };\n  },\n\n  async getDashboard() {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    // Get compliance score from biosecurity data\n    const biosecurityData = JSON.parse(localStorage.getItem('biosecurityData') || '{}');\n    const complianceScore = biosecurityData.complianceScore || 0;\n    \n    return {\n      totalAnimals: 250,\n      healthyAnimals: 245,\n      complianceScore: complianceScore,\n      lastInspection: '2025-09-15'\n    };\n  },\n\n  async getAlerts() {\n    await new Promise(resolve => setTimeout(resolve, 300));\n    \n    // Generate dynamic alerts based on compliance and other factors\n    const alerts = [];\n    const biosecurityData = JSON.parse(localStorage.getItem('biosecurityData') || '{}');\n    const complianceScore = biosecurityData.complianceScore || 0;\n    \n    // Low compliance alert\n    if (complianceScore < 70) {\n      alerts.push({\n        id: 1,\n        type: 'warning',\n        message: `Biosecurity compliance is low (${complianceScore}%). Please complete checklist items.`,\n        time: '1 hour ago',\n        priority: 'high'\n      });\n    }\n    \n    // Disease outbreak alert (simulated)\n    alerts.push({\n      id: 2,\n      type: 'danger',\n      message: 'Avian Flu outbreak reported 15km from your location. Increase biosecurity measures.',\n      time: '2 hours ago',\n      priority: 'critical'\n    });\n    \n    // Vaccination reminder\n    alerts.push({\n      id: 3,\n      type: 'info',\n      message: 'Vaccination schedule reminder: Next vaccination due in 3 days.',\n      time: '1 day ago',\n      priority: 'medium'\n    });\n    \n    // Feed stock alert\n    alerts.push({\n      id: 4,\n      type: 'warning',\n      message: 'Feed stock running low. Current stock: 500kg remaining.',\n      time: '6 hours ago',\n      priority: 'medium'\n    });\n    \n    return { alerts };\n  },\n\n  async getBiosecurityChecklist() {\n    await new Promise(resolve => setTimeout(resolve, 400));\n    \n    const saved = localStorage.getItem('biosecurityData');\n    if (saved) {\n      return JSON.parse(saved);\n    }\n\n    return {\n      checklist: [\n        { id: 1, item: 'Footbath at farm entrance', checked: false, critical: true },\n        { id: 2, item: 'Visitor log maintained', checked: false, critical: true },\n        { id: 3, item: 'Animals isolated when sick', checked: false, critical: true },\n        { id: 4, item: 'Feed storage properly secured', checked: false, critical: false },\n        { id: 5, item: 'Water sources protected', checked: false, critical: true },\n        { id: 6, item: 'Waste disposal system in place', checked: false, critical: true },\n        { id: 7, item: 'Regular cleaning schedule followed', checked: false, critical: false },\n        { id: 8, item: 'Vaccination records updated', checked: false, critical: true },\n        { id: 9, item: 'Equipment disinfected regularly', checked: false, critical: false },\n        { id: 10, item: 'Dead animal disposal protocol', checked: false, critical: true }\n      ],\n      complianceScore: 0\n    };\n  },\n\n  async updateBiosecurityChecklist(checklist) {\n    await new Promise(resolve => setTimeout(resolve, 600));\n    \n    const totalItems = checklist.length;\n    const checkedItems = checklist.filter(item => item.checked).length;\n    const criticalItems = checklist.filter(item => item.critical).length;\n    const checkedCriticalItems = checklist.filter(item => item.critical && item.checked).length;\n    \n    // Weight critical items more heavily in scoring\n    const criticalScore = (checkedCriticalItems / criticalItems) * 70;\n    const regularScore = ((checkedItems - checkedCriticalItems) / (totalItems - criticalItems)) * 30;\n    const complianceScore = Math.round(criticalScore + regularScore);\n\n    const data = {\n      checklist,\n      complianceScore: Math.max(0, complianceScore)\n    };\n\n    localStorage.setItem('biosecurityData', JSON.stringify(data));\n\n    return {\n      message: 'Checklist updated successfully',\n      complianceScore: data.complianceScore\n    };\n  },\n\n  async dismissAlert(alertId) {\n    await new Promise(resolve => setTimeout(resolve, 200));\n    \n    const dismissedAlerts = JSON.parse(localStorage.getItem('dismissedAlerts') || '[]');\n    if (!dismissedAlerts.includes(alertId)) {\n      dismissedAlerts.push(alertId);\n      localStorage.setItem('dismissedAlerts', JSON.stringify(dismissedAlerts));\n    }\n    \n    return { message: 'Alert dismissed' };\n  }\n};\n\nexport default mockApi;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}